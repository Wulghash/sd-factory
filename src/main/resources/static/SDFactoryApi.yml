openapi: 3.0.0
info:
  version: 1.0.6
  title: SD-Factory API
  description: API for creating and storing the Verifiable Credentials

paths:
  /selfdescription:
    post:
      summary: Creates a Verifiable Credential and returns it
      operationId: selfdescriptionPost
      requestBody:
        required: true
        description: parameters to generate VC
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/LegalPersonSchema'
                - $ref: '#/components/schemas/ServiceOfferingSchema'
                - $ref: '#/components/schemas/TermsOfConditionsSchema'
                - $ref: '#/components/schemas/PhysicalResourceSchema'
                - $ref: '#/components/schemas/VirtualResourceSchema'
                - $ref: '#/components/schemas/InstantiatedVirtualResourceSchema'
              discriminator:
                propertyName: type
                mapping:
                  LegalPerson: '#/components/schemas/LegalPersonSchema'
                  ServiceOffering: '#/components/schemas/ServiceOfferingSchema'
                  TermsOfConditions: '#/components/schemas/TermsOfConditionsSchema'
                  PhysicalResource: '#/components/schemas/PhysicalResourceSchema'
                  VirtualResource: '#/components/schemas/VirtualResourceSchema'
                  InstantiatedVirtualResource: '#/components/schemas/InstantiatedVirtualResourceSchema'
            examples:
              LegalPerson:
                description: payload to create LegalPerson
                value:
                    type: LegalPerson
                    holder: BPNL000000000000
                    issuer: CAXSDUMMYCATENAZZ
                    registrationNumber: o12345678
                    headquarterAddress.country: DE
                    legalAddress.country: DE
                    bpn: BPNL000000000000
              ServiceOffering:
                description: payload to create ServiceOffering
                value:
                  holder: BPNL000000000000
                  issuer: CAXSDUMMYCATENAZZ
                  type: ServiceOffering
                  providedBy: https://participant.url
                  aggregationOf: to be clarified
                  termsAndConditions: to be clarified
                  policies: to be clarified
              PhysicalResource:
                description: payload to create PhysicalResource
                value:
                  holder: CAXSDUMMYCATENAZZ
                  issuer: CAXSDUMMYCATENAZZ
                  type: PhysicalResource
                  maintainedBy: https://<link_to_participant_self_description>
                  locationAddress.country: DE
              VirtualResource:
                description: payload to create VirtualResource
                value:
                  holder: CAXSDUMMYCATENAZZ
                  issuer: CAXSDUMMYCATENAZZ
                  type: VirtualResource
                  copyrightOwnedBy: https://<link_to_participant_self_description>
                  license: https://<link_to_license_document>
              InstantiatedVirtualResource:
                description: payload to create InstantiatedVirtualResource
                value:
                  holder: CAXSDUMMYCATENAZZ
                  issuer: CAXSDUMMYCATENAZZ
                  type: InstantiatedVirtualResource
                  maintainedBy: https://<link_to_participant_self_description>
                  hostedOn: https://<link_to_resource>
                  tenantOwnedBy: https://<link_to_participant_self_description>
                  endpoint: <exposed_endpoints>
      responses:
        '201':
          description: Created
          content:
            application/vc+ld+json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                jsonLegalPersonObject:
                  summary: A sample LegalPerson response
                  value: |
                      {
                        "id": "https://sdfactory.int.demo.catena-x.net/selfdescription/vc/1fb3ca5f-234e-4639-8e96-f2ceb56714f0",
                        "@context": [
                          "https://www.w3.org/2018/credentials/v1",
                          "https://raw.githubusercontent.com/catenax-ng/product-sd-hub/eclipse_preparation/src/main/resources/verifiablecredentials.jsonld/sd-document-v0.1.jsonld",
                          "https://w3id.org/vc/status-list/2021/v1"
                        ],
                        "type": [
                          "VerifiableCredential",
                          "LegalPerson"
                        ],
                        "issuer": "did:sov:BEumURwPdXCobgbPYQZXge",
                        "issuanceDate": "2022-10-08T18:12:14Z",
                        "expirationDate": "2023-01-06T18:12:14Z",
                        "credentialSubject": {
                          "headquarter_country": "DE",
                          "legal_country": "DE",
                          "bpn": "BPNL000000000000",
                          "registration_number": "12345678",
                          "id": "did:indy:idunion:test:P5TFvs9PQ6e6nMB18XVTJw"
                        },
                        "credentialStatus": {
                          "id": "https://managed-identity-wallets.int.demo.catena-x.net/api/credentials/status/fe5da20d-35c1-4154-b764-1e7dc875ca1d#61",
                          "type": "StatusList2021Entry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "61",
                          "statusListCredential": "https://managed-identity-wallets.int.demo.catena-x.net/api/credentials/status/fe5da20d-35c1-4154-b764-1e7dc875ca1d"
                        },
                        "proof": {
                          "type": "Ed25519Signature2018",
                          "created": "2022-10-08T18:12:16Z",
                          "proofPurpose": "assertionMethod",
                          "verificationMethod": "did:sov:BEumURwPdXCobgbPYQZXge#key-1",
                          "jws": "eyJhbGciOiAiRWREU0EiLCAiYjY0IjogZmFsc2UsICJjcml0IjogWyJiNjQiXX0..PNxly7b0d714bapo58YB-qmTtw7q3TVB7plOtaQRCXF2VrCwO4-x7Fx8PeavnwYpzu8adF8ZLnALDgMuPBXIAg"
                        }
                      }
                jsonServiceOfferingObject:
                  summary: A sample ServiceOffering response
                  value: |
                      {
                          "@context": [
                              "https://www.w3.org/2018/credentials/v1",
                              "https://raw.githubusercontent.com/catenax-ng/product-sd-hub/eclipse_preparation/src/main/resources/verifiablecredentials.jsonld/sd-document-v0.1.jsonld",
                              "https://w3id.org/vc/status-list/2021/v1"
                          ],
                          "type": [
                              "VerifiableCredential",
                              "ServiceOffering"
                          ],
                          "issuer": "did:sov:BEumURwPdXCobgbPYQZXge",
                          "issuanceDate": "2022-10-08T19:10:20Z",
                          "expirationDate": "2023-01-06T19:10:20Z",
                          "credentialSubject": {
                              "termsAndConditions": "http://terms.and.cond",
                              "policies": "policies",
                              "provided_by": "sss",
                              "id": "did:indy:idunion:test:P5TFvs9PQ6e6nMB18XVTJw"
                          },
                          "credentialStatus": {
                              "id": "https://managed-identity-wallets.int.demo.catena-x.net/api/credentials/status/fe5da20d-35c1-4154-b764-1e7dc875ca1d#67",
                              "type": "StatusList2021Entry",
                              "statusPurpose": "revocation",
                              "statusListIndex": "67",
                              "statusListCredential": "https://managed-identity-wallets.int.demo.catena-x.net/api/credentials/status/fe5da20d-35c1-4154-b764-1e7dc875ca1d"
                          },
                          "proof": {
                              "type": "Ed25519Signature2018",
                              "created": "2022-10-08T19:10:23Z",
                              "proofPurpose": "assertionMethod",
                              "verificationMethod": "did:sov:BEumURwPdXCobgbPYQZXge#key-1",
                              "jws": "eyJhbGciOiAiRWREU0EiLCAiYjY0IjogZmFsc2UsICJjcml0IjogWyJiNjQiXX0..ivUytTwbtcxByw5L2zuxpE4pjJTIEzaLPoW_gXUtByjfN34ViEbgq6KeKO82ejB6GNetzJcu7sqsZfp6-GPzDA"
                          }
                      }
components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
  schemas:
    SelfDescriptionSchema:
      type: object
      properties:
        type:
          type: string
        holder:
          type: string
        issuer:
          type: string
      required:
        - type
        - holder
        - issuer
    LegalPersonSchema:
      type: object
      allOf:
        - $ref: '#/components/schemas/SelfDescriptionSchema'
      properties:
        registrationNumber:
          type: string
        headquarterAddress.country:
          type: string
        legalAddress.country:
          type: string
        bpn:
          type: string
      required:
        - type
        - holder
        - issuer
        - bpn
    ServiceOfferingSchema:
      type: object
      allOf:
        - $ref: '#/components/schemas/SelfDescriptionSchema'
      properties:
        providedBy:
          type: string
          format: uri
        aggregationOf:
          type: string
        termsAndConditions:
          type: string
        policies:
          type: string
      required:
        - type
        - holder
        - issuer
        - providedBy
    TermsOfConditionSchema:
      type: object
      allOf:
        - $ref: '#/components/schemas/SelfDescriptionSchema'
      properties:
        URL:
          type: string
          format: uri
        hash:
          type: string
      required:
        - type
        - holder
        - issuer
        - providedBy
    PhysicalResourceSchema:
      type: object
      allOf:
        - $ref: '#/components/schemas/SelfDescriptionSchema'
      properties:
        maintainedBy:
          type: string
        locationAddress.country:
          type: string
      required:
        - type
        - holder
        - issuer
        - providedBy
    VirtualResourceSchema:
      type: object
      allOf:
        - $ref: '#/components/schemas/SelfDescriptionSchema'
      properties:
        copyrightOwnedBy:
          type: string
        license:
          type: string
      required:
        - type
        - holder
        - issuer
        - providedBy
    InstantiatedVirtualResourceSchema:
      type: object
      allOf:
        - $ref: '#/components/schemas/SelfDescriptionSchema'
      properties:
        maintainedBy:
          type: string
        hostedOn:
          type: string
        tenantOwnedBy:
          type: string
        endpoint:
          type: string
      required:
        - type
        - holder
        - issuer
        - providedBy
security:
  - bearerAuth: []         # use the same name as above